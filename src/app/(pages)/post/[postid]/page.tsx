import { Metadata } from "next";
import { FC } from "react";
import { prisma } from "../../../../../lib/prisma";

interface PageProps {
  params: {
    postid: string;
  };
}

type Post = {
  userId: number;
  id: number;
  title: string;
  body: string;
};

//dynamic metadata
// export async function generateMetadata({
//   params,
// }: PageProps): Promise<Metadata> {
//   const res = await fetch(
//     `https://jsonplaceholder.typicode.com/posts/${params.postid}`
//   );
//   const data = (await res.json()) as Post;
//   return { title: `post ${data.id}` };
// }

const page = async ({ params }: any) => {
  let id = params.postid;
  const post = await prisma.post.findUnique({
    where: {
      id: Number(id),
    },
  });
  return <div>post: {post?.title}</div>;
};

export default page;
// export const metadata = {
//   title: "Posts",
//   description: "Generated by create next app",
// };

//to make this route server side generated, we need to generate static params
// export async function generateStaticParams() {
//   const posts = ["post-one", "post-two", "post-three"];

//   return posts.map((post) => {
//     return {
//       postId: post,
//     };
//   });
// }
// const page = async (props: any) => {
//   // console.log(props);

//   // db fetching
//   //   const res = await fetch(
//   //     `https://jsonplaceholder.typicode.com/posts/${params.postid}`
//   //   );

//   return <div></div>;
// };

// export default page;

// server component
//   console.log(props);

// db fetching
//   const res = await fetch(
//     `https://jsonplaceholder.typicode.com/posts/${params.postid}`
//   );
